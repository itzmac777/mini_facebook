<div class="create-post-container">
    <div class="input-label-container">
        <input type="text" id="create-post-title">
        <label for="create-post-title">Title</label>
    </div>
    <div class="input-label-container">
        <input type="text" id="create-post-content">
        <label for="create-post-content">Content</label>
    </div>
    <div class="post-btn-container">
        <button id="create-post-btn">Post</button>
    </div>
</div>
<div class="post-display-container">
        <% posts?.forEach((post)=> { %>
            <div class="post">
                <div class="post-name"><%= post?.title %></div>
                <div class="post-content"><%= post?.content %></div>
                <div class="post-posted-by">Posted By: <%= post?.author?.name %></div>
                <% if(post?.author?._id == user?._id){ %>
                    <button postId=<%= `${post.id}` %> class="delete-post-btn">Delete</button>
                    <button postId=<%= `${post.id}` %> class="edit-post-btn">Edit</button>
                <% } %>
            </div>
        <% }); %>
</div>
<div>
    <a href="/profile">Go to profile</a>
    <a href="/people">Find People</a>
    <input type="checkbox" <% if(publicPost){ %> checked <% } %> name="toggle-friend-public-input" id="toggle-friend-public-input">Show Public Posts</div>
</div>

<script>
    const postTitleContainer = document.getElementById("create-post-title")
    const postContentContainer = document.getElementById("create-post-content")
    const createPostBtn = document.getElementById("create-post-btn")
    const friendsOnlyPostInput = document.getElementById("toggle-friend-public-input")

    const deletePostBtnCollection = document.querySelectorAll(".delete-post-btn")
    const editPostBtnCollection = document.querySelectorAll(".edit-post-btn")

    friendsOnlyPostInput.addEventListener('change', async(e)=> {
        e.target.setAttribute('disabled', true)
        await handleFriendsOnlyCheckbox(e)
    })

    createPostBtn.addEventListener('click', (e)=> {
        if(postContentContainer?.value?.trim() == '' || postTitleContainer?.value?.trim() == ''){
            return alert("Post contents cannot be empty")
        }
        handleCreatePost()
    })

    deletePostBtnCollection?.forEach(btn=> btn.addEventListener('click', e=> {
        handleDeletePost(e.target.getAttribute('postId'))
    }))

    editPostBtnCollection?.forEach(btn=> btn.addEventListener('click', e=> {
        handleEditPost(e.target.getAttribute('postId'))
    }))

    async function handleDeletePost(postId) {
        const response = await fetch(`/post/delete/${postId}`, {
            method: "DELETE"
        });
        const result = await response.json();
        if(!result.success){
            return alert(result.msg)
        }
        window.location.href = '/'
    }

    async function handleEditPost(postId) {
        window.location.href = `/post/edit/${postId}`
    }

    async function handleCreatePost() {
        const response = await fetch('/post/create', {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: new URLSearchParams({
                title: postTitleContainer.value,
                content: postContentContainer.value
            })
        });
        const result = await response.json();
        if(!result.success){
            return alert(result.msg)
        }
        window.location.href = '/'
    }

    async function handleFriendsOnlyCheckbox(e) {
        const response = await fetch(`/user/preference/`, {
            method: "PATCH",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: new URLSearchParams({
                publicPost: e.target.checked
            })
        });
        const result = await response.json();
        if(!result.success){
            e.target.checked = false;
            return alert(result.msg)
        }
        e.target.removeAttribute('disabled');
        window.location.reload()
    }
</script>